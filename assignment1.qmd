---
title: "Geospatial Analysis for Data Science 2025 - Assignment 1"
author: 
  - "Luis Fernando Ramízes Ruiz" 
  - "Montserrat Lopez Perez" 
  - "Rodrigo Dornelles"
format: html
editor: visual
---

# Create two points in the geographic CRS WGS 84 (EPSG: 4326) using the following latitude and longitude:

-   \(A\) longitude: 11.56362 , latitude: 48.12791
-   \(B\) longitude: -8.63953, latitude: 41.155140

```{r create_points}

point_a <- sf::st_sfc(sf::st_point(c(11.56362, 48.12791)), crs = 4326)
point_b <- sf::st_sfc(sf::st_point(c(-8.63953, 41.155140)), crs = 4326)

# print it
point_a
point_b

```

```{r test}
sf::st_crs(point_a)
```

# 1. Compute the distance between these points in these four settings:

#### (1)Great circle distance

```{r q1}

dist_circle <- sf::st_distance(point_a, point_b, which = 'Great Circle') |> 
  as.numeric()

print(paste("Distance in Great Circle:", dist_circle, "(m)"))
# check if is right
# print(sf::st_distance(point_a, point_b, which = 'Great Circle') == sf::st_distance(point_b, point_a, which = 'Great Circle'))
```

#### (2)Project into the projected CRS Pseudo-Mercator WGS 84 (EPSG: 3857) and compute the Euclidean distance

```{r q2}

# save the CRS
crs_mercator <- 'EPSG: 3857'

# project 
point_a_mercator <- sf::st_transform(point_a, crs = crs_mercator)
point_b_mercator <- sf::st_transform(point_b, crs = crs_mercator)
print(point_a_mercator)
print(point_b_mercator)

# compute distance
dist_mercator <- sf::st_distance(point_a_mercator, point_b_mercator, which = 'Euclidean') |> 
  # convert into number
  as.numeric()

print(paste("Distance in pseudo-mercator:", dist_mercator, "(m)"))
```

#### (3)Project into the projected CRS LAEA (Lambert Azimuthal Equal Area) Europe (EPSG: 3035) and compute the Euclidean distance

```{r q3}

# save the CRS
crs_laea <- 'EPSG: 3035'

# project 
point_a_laea <- sf::st_transform(point_a, crs = crs_laea)
point_b_laea <- sf::st_transform(point_b, crs = crs_laea)
print(point_a_laea)
print(point_b_laea)

# compute distance
dist_laea <- sf::st_distance(point_a_laea, point_b_laea, which = 'Euclidean') |> 
  # convert into number
  as.numeric()

print(paste("Distance in LAEA:", dist_laea, "(m)"))


```

#### (4) Project into the projected CRS ED 1950 Equidistant Conic Europe Europe (ESRI:102031) and compute the Euclidean distance (authority ESRI – thus, set the crs parameter as crs=“ESRI: 102031“)

```{r q4}

# crs
crs_conic <- "ESRI: 102031"

# project 
point_a_conic <- sf::st_transform(point_a, crs = crs_conic)
point_b_conic <- sf::st_transform(point_b, crs = crs_conic)
print(point_a_conic)
print(point_b_conic)

# compute distance
dist_conic <- sf::st_distance(point_a_conic, point_b_conic, which = 'Euclidean') |> 
  # convert into number
  as.numeric()

print(paste("Distance in Eq. Conic Europe:", dist_conic, "(m)"))

```

```{r print}

tibble::tibble(
  dist_circle = dist_circle,
  dist_mercator = dist_mercator,
  dist_leaea = dist_laea,
  dist_conic = dist_conic
)

```

# 2. Explain in a few sentences, why these results are different. Which is the least correct?
